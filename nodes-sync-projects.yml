---
- hosts: controller
  tasks:
  - name: Ensure node config dir exists
    file:
      path: ./nodes
      owner: root
      state: directory
      mode: 0755
  - name: Ensure project config file for all nodes
    command: cp --no-clobber ./files/node.yml ./nodes/{{ item }}.yml
    loop: "{{ groups['compute_nodes'] }}"


- hosts: compute_nodes
  remote_user: farmer
  tasks:
  - name: Import project definitions
    include_vars:
      file: ./nodes/{{ inventory_hostname }}.yml
      name: node
  - name: Create BOINC project dirs
    become: true
    no_log: true
    ansible.builtin.file:
      path: "/var/lib/boinc/projects/{{ item.url }}"
      state: directory
      owner: boinc
      group: boinc
      mode: '0755'
    loop: "{{ node.projects }}"
  - name: Update BOINC project app configs
    become: true
    no_log: true
    copy:
      src: "./nodes/{{ inventory_hostname }}-app_config-{{ item.url }}.xml"
      dest: "/var/lib/boinc/projects/{{ item.url }}/app_config.xml"
      owner: root
      group: root
      mode: 0644
    loop: "{{ node.projects }}"
    vars:
      appconfigpath: "./nodes/{{ inventory_hostname }}-app_config-{{ item.url }}.xml"
    when: appconfigpath is exists
    register: appconfig
  - name: Update BOINC client config
    become: true
    copy:
      src: ./nodes/{{ inventory_hostname }}-cc.xml
      dest: /var/lib/boinc/cc_config.xml
      owner: root
      group: root
      mode: 0644
    vars:
      ccconfigpath: "./nodes/{{ inventory_hostname }}-cc.xml"
    when: ccconfigpath is exists
    register: ccconfig

  - name: Update project statuses
    no_log: true
    command: /usr/local/bin/boinccmdcmd /var/lib/boinc {{ item.url }} {{ item.user }} {{ item.email }} {{ item.passwd }} {{ item.state }}
    loop: "{{ node.projects }}"

  - name: Copy GUI auth file
    become: true
    command: cp /var/lib/boinc/gui_rpc_auth.cfg /home/farmer/{{ inventory_hostname }}_auth.cfg
  - name: Chown auth file
    become: true
    command: chown farmer:farmer /home/farmer/{{ inventory_hostname }}_auth.cfg
    args:
      warn: false

  - name: Reload BOINC client config
    become: true
    shell: |
      cd /var/lib/boinc
      /bin/boinccmd --read_cc_config
    when: ccconfig.changed and (appconfig.changed is false)
  - name: Restart BOINC
    become: true
    service:
      name: boinc-client
      state: restarted
    when: appconfig.changed

- hosts: controller
  tasks:
  - name: Assemble RPC keyfile
    script: "./bin/utils/makeboincguikeyfile {{ groups['compute_nodes'] }}"
