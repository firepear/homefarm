---
- import_tasks: boincuser.yml

- name: Install BOINC dependencies
  become: true
  apk:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - libtool
    - automake
    - libcurl
    - curl-dev
    - g++

- name: Ensure src destination exists
  become: true
  file:
    path: "{{ boinc_src_dir }}"
    owner: farmer
    state: directory
    mode: 0755

- name: Check installed BOINC version
  shell: "boinc --version | grep {{ boinc_version }}"
  register: boinc_installed
  changed_when: false
  ignore_errors: true

- name: Download BOINC source
  get_url:
    url: "{{ boinc_src_url }}"
    dest: "{{ boinc_src_file }}"
    sha256sum: "{{ boinc_src_sha256 }}"
  when: boinc_installed is failed

- name: Extract BOINC source
  unarchive:
    src: "{{ boinc_src_file }}"
    dest: "{{ boinc_src_dir }}"
    remote_src: true
    creates: "{{ boinc_src_unpack_dir }}"
  when: boinc_installed is failed

- name: Preconfigure BOINC source tree
  command:
    "bash -lc './_autosetup'"
  args:
    chdir: "{{ boinc_src_unpack_dir }}"
  register: boinc_preconfigured
  when: boinc_installed is failed

- name: Configure BOINC source tree
  command:
    "bash -lc './configure --disable-server --disable-manager'"
  args:
    chdir: "{{ boinc_src_unpack_dir }}"
  register: boinc_configured
  when: boinc_preconfigured.changed

- name: Make and install BOINC
  become: true
  command:
    "bash -lc 'make && make install'"
  args:
    chdir: "{{ boinc_src_unpack_dir }}"
  when: boinc_configured.changed
  notify: Restart BOINC

- name: Install improved BOINC init script
  become: true
  template:
    src: boinc-client-init.j2
    dest: /usr/local/etc/init.d/boinc-client
    owner: root
    group: root
    mode: 0755
  register: boinc_init
  notify: Restart BOINC

- name: Enable BOINC in openrc
  become: true
  command:
    "bash -lc 'rc-update add boinc-client'"
  when: boinc_init.changed
  notify: Restart BOINC

# TODOS
#
# somewhere in here we need to get the contents of gui_rpc_auth.cfg
# shipped to the control machine, so it can be included in
# ~/.boinctui.cfg (this should probably be a playbook that runs on the
# control machine)

# write playbooks that use boinccmd to attach to projects if we don't
# detect that we already are. which projects to connect to are based
# on vars in the playbook.

# other playbooks to do management, like suspend, resume, no new work,
# allow work? seems reasonable.
