#!/usr/bin/python3

import subprocess
import sys

# assign our arguments to variables:
#   * the BOINC work directory
#   * the URL of the project we're examining
#   * the email address associated with the project
#   * the password of the user for this project
#   * the desired state of the project
sys.argv.pop(0)
boinc_dir, proj_url, proj_user, proj_mail, proj_passwd, proj_state = sys.argv

# slurp the gui access key and shorten the boinccmd command
result = subprocess.run(["sudo", "cat", "{}/gui_rpc_auth.cfg".format(boinc_dir)], stdout=subprocess.PIPE, encoding="utf-8")
pw = result.stdout
boinc = "/usr/local/bin/boinccmd"
pwf = "--passwd"

def scan_output_for(cmd, key):
    result = subprocess.run(cmd, stdout=subprocess.PIPE, encoding="utf-8")
    lines = result.stdout.split('\n')
    for line in lines:
        line.lstrip()
        if line.startswith(key):
            k, v = line.split(": ")
            return v
    return None

def get_access_key(proj_url, proj_user, proj_email, proj_password):
    # first we have to find out if we need to pass email or username
    # in order to attach. this varies by project.
    use_name = scan_output_for([boinc, pwf, pw, "--get_project_config", proj_url], "uses_username")
    if use_name != 0 or use_name != 1:
        print("couldn't get config for project '{}'".format(proj_url))
        sys.exit(1)
    # knowing that, we can get the access key
    key = None
    if use_name == 1:
        key = scan_output_for([boinc, pwf, pw, "--lookup_account", proj_url, proj_user, proj_passwd], "account key")
    else:
        key = scan_output_for([boinc, pwf, pw, "--lookup_account", proj_url, proj_mail, proj_passwd], "account key")
    if key is None:
        print("couldn't get access key for project '{}'".format(proj_url))
        sys.exit(1)
    return key

def attach_to_project(proj_url, proj_user, proj_email, proj_password):
    # need account access key to attach
    key = get_access_key(proj_url, proj_user, proj_email, proj_password)
    # now we can send the attach request
    subprocess.run([boinc, pwf, pw, "--project_attach", proj_url, access_key], stdout=subprocess.PIPE)

#pstate = get_project_state(proj_url)
pstate = None

if pstate is None:
    # we don't know anything about this project. all we can do is
    # attach, if that's what we've been told to do.
    if proj_state == "active":
        attach_to_project(proj_url, proj_user, proj_mail, proj_passwd)
        sys.exit(0)
    else:
        print("asked to set state to '{}' for project '{}', but am not attached to that project".format(proj_state, proj_url))
        sys.exit(1)

