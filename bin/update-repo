#!/usr/bin/python3

import os
import subprocess
import sys

# guard against humans running this
if len(sys.argv) == 1 or sys.argv[1] == "-h" or sys.argv[1] == "--help":
    print("This script should not be run by hand. It manages the local repository")
    print("for Homefarm.")
    sys.exit(0)

localrepo = sys.argv[1]
mirrorurl = sys.argv[2]

repos = ["core", "extra", "community"]
pkgfiles = {}

# switch to the local repo directory
chdir(localrepo)
# get a list of all currently downloaded packages
localpkgs = os.listdir(localrepo)
# and read our list of installed packages
pkgfile = open("./db/pkgs.txt")
pkgs = pkgfile.readlines()
for pkg in pkgs:
    pkg = pkg.rstrip()
pkgfile.close()

# gather data on all available packages
for repo in repos:
    pkginfo[repo] = {}
    repopkgs = os.listdir("./db/{}".format(repo))
    # read the 'desc' file of each pkg in the repo. build a map of pkg
    # filenames to repo we're pulling them from.
    for pkg in repopkgs:
        pkgname = ""
        pkgfile = ""
        with open("./db/{}/{}/desc".format(repo, pkg)) as desc:
            line = desc.read().rstrip()
            if line == "%FILENAME%":
                pkgfile = desc.read().rstrip()
            if line == "%NAME%":
                pkgname = desc.read().rstrip()
        # only store data if this pkg is installed
        if pkgname in pkgs:
            pkgfiles[pkgfile] = repo

# if a filename is not in ${LOCALREPO}, download it
for pkg in pkgfiles.keys():
    if not pkg in localpkgs:
        pkgurl = "{}/{}/os/x86_64/{}".format(mirrorurl, pkgfiles[pkg], pkg)
        pkgdest = "{}/{}".format(localrepo, pkg)
        subprocess.run(['curl', pkgurl, '-o', pkgdest])

# if a file in ${LOCALREPO} is not in the filename list, delete it
for pkg in repopkgs:
    if pkg not in pkgfiles:
        os.remove(pkg)
