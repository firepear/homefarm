#!/bin/bash
set -e

CONUPDATES=0
COMUPDATES=0

update_repo() {
    # if we have a stored latest tag, read it in as current
    if [[ -e ./.current_tag ]]; then
        CURRENT_TAG=$(cat ./.current_tag)
    fi
    # check github for the most recent tag
    NEWEST_TAG=$(curl -s 'https://api.github.com/repos/firepear/homefarm/tags' | python3 -c 'import sys, json; print(json.load(sys.stdin)[0]["name"])')

    if [[ "${CURRENT_TAG}" == "${NEWEST_TAG}" ]]; then
        # if tags match, do nothing
        shownotice "Homefarm is up to date: ${NEWEST_TAG}"
        return
    else
        # otherwise proceed with upgrade
        shownotice "New Homefarm release: ${NEWEST_TAG}"
    fi

    shownotice "Updating the homefarm repo"
    git pull

    # we made it down here, so cache the new tag name
    if [[ "${1}" != "--force" ]]; then
        echo "${NEWEST_TAG}" > ./.current_tag
    fi

    shownotice "Repo updated; restarting update"
    exec "${1}"
}

update_os() {
    shownotice "Checking for control node updates"
    CONUPDATES=$(sudo pacman -Sy > /dev/null && pacman -Qu | wc -l)
    if [[ "${CONUPDATES}" -gt "0" ]]; then
        shownotice "Updating the control node"
        yes | sudo pacman -Syu > /dev/null

        shownotice "Updating ansible (if needed)"
        sudo pip3 install ansible --upgrade
    fi

    shownotice "Checking for compute node updates"
    NODES=( ./nodes/*yml )
    NODE=$(basename "${NODES[0]}" .yml)
    COMUPDATES=$(ssh "farmer@${NODE}" 'sudo pacman -Sy > /dev/null && pacman -Qu | wc -l')
    if [[ "${COMUPDATES}" -gt "0" ]]; then
        shownotice "Updating compute nodes"
        ansible-playbook compute-nodes-system-update.yml
    fi
}

update_boinc() {
    shownotice "Updating BOINC on compute nodes"
    ansible-playbook compute-nodes-boinc.yml
}



if [[ "${1}" == "-h" ]] || [[ "${1}" == "--help" ]]; then
    cat <<EOF
Update the cluster's OS and Homefarm install, as needed.

See README.md for more information.
EOF
    exit 0
fi

# cd to homefarm and source util funcs
cd ~/homefarm
. ./bin/util.sh

update_repo "${0}"
update_os
update_boinc

if [[ "${COMUPDATES}" -gt "0" ]]; then
    shownotice "Rebooting compute nodes"
    for node in nodes/*yml; do
        ssh "farmer@$(basename """${node}""" .yml)" 'sudo reboot' || true
    done
fi

if [[ "${CONUPDATES}" -gt "0" ]]; then
    shownotice "Update complete; rebooting control node"
    sudo reboot
else
    shownotice "Update complete"
fi
