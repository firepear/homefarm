#!/bin/bash
set -e

declare -A FP_CONFIG
source ./bin/common.sh

ARCHIVE="/homefarm/homefarm.backup.tar.gz"

# no arguments: create tarball
if [[ "${1}" == "" ]]; then
    fp_parseconfig ./.fpconfig.json homefarm
    tar zcvf ${ARCHIVE} ./.ssh \
        ./.boincguikeys.json \
        ./.current_tag \
        ./.fpconfig.json \
        ./farm.cfg \
        ./nodes/ \
        ./projectstats.db \
        ./srv/homefarm/pacman.conf \
        ./srv/homefarm/mirrorlist >> /dev/null
    echo "Farm configuration archived to ${ARCHIVE}"
    exit
fi

# any argument other than "restore": print out the help message
if [[ "${1}" != "restore" ]]; then
    cat <<EOF
usage is:

    ./bin/backup # create archive tarball

    ./bin/backup --restore # unpack archive and restore farm state

EOF
    exit 1
fi

# if we're down here, then we're restoring a tarball. unpack it, and
# move everything that belongs somewhere else to that location.
if [[ ! -e ${ARCHIVE} ]]; then
    echo "error: can't find archive file ${ARCHIVE}"
    exit 1
fi
echo "Unpacking tarball"
tar zxvf ${ARCHIVE} >> /dev/null
echo "Restoring local package mirror"
source ./bin/common.sh
fp_parseconfig ./.fpconfig.json homefarm
mkdir -p "${FP_CONFIG[localrepo]}"
update_localrepo "${FP_CONFIG[localrepo]}" "${FP_CONFIG[mirrorurl]}"
echo "Farm backup and repo restored."
