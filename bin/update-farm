#!/bin/bash
set -e

if [[ "${1}" == "-h" ]] || [[ "${1}" == "--help" ]]; then
    echo "Update all compute nodes if there is a new release of homefarm."
    echo "See README.md for more information."
    exit 0
fi

# cd to homefarm and source util funcs
cd /home/pi/homefarm
. ./bin/util.sh

# if we have a stored latest tag, read it in as current
if [[ -e ./.current_tag ]]; then
    CURRENT_TAG=$(cat ./.current_tag)
fi
# check github for the most recent tag
NEWEST_TAG=$(curl -s 'https://api.github.com/repos/firepear/homefarm/tags' | python3 -c 'import sys, json; print(json.load(sys.stdin)[0]["name"])')

if [[ "${1}" != "--force" ]]; then
    if [[ "${CURRENT_TAG}" == "${NEWEST_TAG}" ]]; then
        # if tags match, do nothing
        shownotice "homefarm is up to date: ${NEWEST_TAG}"
        exit 0
    else
        # otherwise proceed with upgrade
        shownotice "there is a new release: ${NEWEST_TAG}"
        echo -n "update now [y/N]? "
        read -r answer
        if [[ "${answer}" != "y" ]]; then
            echo "ok. delaying update."
            exit 0
        fi
    fi
else
    shownotice "forcing update"
fi

shownotice "updating the homefarm repo"
git pull

shownotice "updating raspbian"
sudo apt-get -q update
sudo apt-get --yes -q dist-upgrade
# this is where we add new packages, when we discover we need them
# apt-get --yes -q install ...

shownotice "updating ansible (if needed)"
sudo pip3 install ansible --upgrade

shownotice "control node update complete"

shownotice "updating compute nodes"
ansible-playbook compute-nodes-system-update.yml
ansible-playbook compute-nodes-boinc.yml

shownotice "rebooting compute nodes"
for node in nodes/*yml; do
    ssh "farmer@$(basename ${node} .yml)" 'sudo reboot'
done

# we made it down here, so cache the new tag name
if [[ "${1}" != "--force" ]]; then
    echo "${NEWEST_TAG}" > ./.current_tag
fi

shownotice "update complete; rebooting control node"
sudo reboot
