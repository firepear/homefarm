#!/bin/bash
set -e

if [[ "${1}" == "" ]]; then
    echo "error: no control IP specified"
    echo "Usage is: ${0} [CONTROL_NODE_IP]"
    exit 1
fi

. ./bin/util.sh

if [[ ! -e "./.firststage" ]]; then
    # update the system
    shownotice "Updating system software..."
    sleep 1
    # switch to rolling release
    apk add sed
    sed -i -e 's/v[[:digit:]]\.[[:digit:]]/edge/g' /etc/apk/repositories
    # enable community repo
    sed -i -E '0,/community/{s:#(.*)/edge/community:\1/edge/community:}' /etc/apk/repositories
    apk upgrade --update-cache --available
    touch "./.firststage"
    shownotice "Update complete. Rebooting in 5 seconds..."
    sleep 5
    sync
    reboot
fi

# install preqs
shownotice "Continuing setup!"
shownotice "Installing Ansible prerequisites..."
sleep 1
apk add python3 python3-dev linux-headers musl-dev gcc make autoconf libffi libffi-dev openssl1.0 libressl libressl-dev sudo shadow tar
# we need a just plain "python" executable for ansible
ln -f -s /usr/bin/python3 /usr/bin/python

# install ansible
shownotice "Installing Ansible..."
sleep 1
pip3 install ansible

# create user, set passwd, config sudo access, and setup ssh keys
shownotice "Creating user for Ansible..."
sleep 1
adduser -h /home/farmer -D farmer
passwd=$( openssl passwd -1 -salt BOINC $(openssl rand -base64 32) )
usermod -p ${passwd} farmer
echo "farmer ALL=(ALL) NOPASSWD:ALL" | tee -a /etc/sudoers > /dev/null
mkdir -p /home/farmer/.ssh
chmod 700 /home/farmer/.ssh
wget ${1}:8000/id_farmer.pub -O /home/farmer/.ssh/authorized_keys
chown -R farmer:farmer /home/farmer/.ssh
sed -i -E 's/^\#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config

# add vsyscall to kernel boot parameters
vsyscall_enable=$(grep vsyscall /boot/grub/grub.cfg | wc -l)
if [[ "${vsyscall_enable}" == "0" ]]; then
    sed -i -E 's/^(\s+linux\s+.*)$/\1 vsyscall=emulate/' /boot/grub/grub.cfg
fi
