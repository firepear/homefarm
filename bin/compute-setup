#!/bin/bash
set -e
cd /root

# source util funcs
. ./common.sh

# install preqs
clear
shownotice "Homefarm setup beginning"

# create user, set passwd, config sudo access, and setup ssh keys
shownotice "Creating user for Ansible"
useradd -d /home/farmer -m -s /bin/bash farmer
passwd=$( openssl passwd -1 -salt BOINC "$(openssl rand -base64 32)" )
usermod -p "${passwd}" farmer
echo "farmer ALL=(ALL) NOPASSWD:ALL" | tee -a /etc/sudoers > /dev/null
mkdir -p /home/farmer/.ssh
chmod 700 /home/farmer/.ssh
mv id_farmer.pub /home/farmer/.ssh/authorized_keys
chown -R farmer:farmer /home/farmer/.ssh
sed -i -E 's/^\#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
# randomize root passwd while we're here
passwd=$( openssl passwd -1 -salt BOINC "$(openssl rand -base64 32)" )
usermod -p "${passwd}" root

shownotice "Installing Ansible and prerequisites"
yes | pacman -S --needed python openssl sudo ansible

shownotice "Configuring sensors"
/usr/bin/sensors-detect --auto > /dev/null

shownotice "Setting boot parameters"
# add vsyscall to kernel boot parameters
vsyscall_enable=$(grep -c vsyscall /boot/loader/entries/arch.conf) || true
if [[ "${vsyscall_enable}" == "0" ]]; then
    sed -i -E 's/^(options\s+.*)$/\1 vsyscall=emulate/' /boot/loader/entries/arch.conf
fi

shownotice "Setup complete"
echo "Rebooting in 5 seconds."
sleep 5
reboot
