#!/bin/bash
set -e

if [[ "${1}" == "" ]]; then
    echo "error: no control IP specified"
    echo "Usage is: ${0} [CONTROL_NODE_IP]"
    exit 1
fi

if [[ ! -e "./.firststage" ]]; then
    # update the system
    echo "Updating system software..."
    sleep 1
    # switch to rolling release
    sed -i -e 's/v[[:digit:]]\.[[:digit:]]/edge/g' /etc/apk/repositories
    apk upgrade --update-cache --available
    touch "./.firststage"
    echo
    echo
    echo "Update complete. Rebooting in 5 seconds..."
    sleep 5
    sync
    reboot
fi

# install preqs
echo "Continuing setup!"
echo
echo "Installing Ansible prerequisites..."
sleep 1
apk add python3 python3-dev linux-headers musl-dev gcc make autoconf libffi libffi-dev openssl1.0 openssl1.0-dev

# install ansible
echo
echo
echo "Installing Ansible..."
sleep 1
pip3 install ansible

# create user and setup ssh keys
echo
echo
echo "Creating user for Ansible..."
sleep 1
adduser -h /home/farmer -D farmer
mkdir /home/farmer/.ssh
chmod 700 /home/farmer/.ssh
wget ${1}:8000/id_ecdsa.pub -O /home/farmer/.ssh/authorized_keys
chown -R farmer:farmer /home/farmer/.ssh

# boinctui
# https://github.com/mpentler/boinctui-extended/archive/1.0.2.tar.gz

# TODOS
#
# somewhere in here we need to get the contents of gui_rpc_auth.cfg
# shipped to the control machine, so it can be included in
# ~/.boinctui.cfg (this should probably be a playbook that runs on the
# control machine)

# write playbooks that use boinccmd to attach to projects if we don't
# detect that we already are. which projects to connect to are based
# on vars in the playbook.

# other playbooks to do management, like suspend, resume, no new work,
# allow work? seems reasonable.
